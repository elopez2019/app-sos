{"version":3,"sources":["./src/app/tab2/tab2-routing.module.ts","./src/app/tab2/tab2.module.ts","./src/app/tab2/tab2.page.ts","./src/app/tab2/tab2.page.scss","./src/app/tab2/tab2.page.html"],"names":[],"mappings":"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","file":"src_app_tab2_tab2_module_ts.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { Tab2Page } from './tab2.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: Tab2Page,\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class Tab2PageRoutingModule {}\n","import { IonicModule } from '@ionic/angular';\nimport { RouterModule } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Tab2Page } from './tab2.page';\nimport { ExploreContainerComponentModule } from '../explore-container/explore-container.module';\n\nimport { Tab2PageRoutingModule } from './tab2-routing.module';\n\n@NgModule({\n  imports: [\n    IonicModule,\n    CommonModule,\n    FormsModule,\n    ExploreContainerComponentModule,\n    Tab2PageRoutingModule\n  ],\n  declarations: [Tab2Page]\n})\nexport class Tab2PageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { ModalController } from '@ionic/angular';\nimport { ModalContactComponent } from '../modal-contact/modal-contact.component'; // Componente del modal\nimport { FirebaseService } from '../services/firebase.service'; // Servicio\n\nimport { collection, getDocs, addDoc , doc, setDoc} from 'firebase/firestore';\nimport { firestore } from '../firebase/firebase-config';\nimport { getAuth } from 'firebase/auth'; // Agregar esta importación\n\n\n@Component({\n  selector: 'app-tab2',\n  templateUrl: 'tab2.page.html',\n  styleUrls: ['tab2.page.scss'],\n})\nexport class Tab2Page implements OnInit {\n  list: Array<{ id: string; nombre: string; telefono: string }> = []; // Incluye el ID\n  message = '';\n\n  constructor(\n    private modalController: ModalController,\n    private firebaseService: FirebaseService // Servicio inyectado\n  ) {}\n\n  ngOnInit() {\n    const auth = getAuth();\n    const user = auth.currentUser; // Usuario autenticado\n\n    if (user) {\n      const contactosCollection = collection(firestore, 'contactos');\n      getDocs(contactosCollection)\n        .then((querySnapshot) => {\n          this.list = querySnapshot.docs\n            .map((doc) => ({\n              id: doc.id,\n              ...(doc.data() as { nombre: string; telefono: string; userId: string }),\n            }))\n            .filter((contact) => contact.userId === user.uid); // Filtrar por userId\n        })\n        .catch((error) => {\n          console.error('Error al obtener contactos: ', error);\n        });\n    } else {\n      console.error('No hay usuario autenticado.');\n    }\n  }\n\n\n  async openModal() {\n    const modal = await this.modalController.create({\n      component: ModalContactComponent,\n    });\n\n    modal.onDidDismiss().then(async (data) => {\n      if (data.role === 'confirm') {\n        const newContact = data.data;\n\n        const auth = getAuth();\n        const user = auth.currentUser;\n\n        if (user) {\n          // Agregar el userId al nuevo contacto\n          const contactosCollection = collection(firestore, 'contactos');\n          const docRef = await addDoc(contactosCollection, {\n            ...newContact,\n            userId: user.uid,\n          });\n\n          this.list.push({ id: docRef.id, ...newContact, userId: user.uid }); // Actualizar lista local\n          this.message = `¡Contacto \"${newContact.nombre}\" agregado exitosamente!`;\n        } else {\n          console.error('Usuario no autenticado');\n        }\n      }\n    });\n\n    return await modal.present();\n  }\n\n\n  // Método para editar contacto\n  async editContact(contact: { id: string; nombre: string; telefono: string }) {\n    const modal = await this.modalController.create({\n      component: ModalContactComponent,\n      componentProps: {\n        contacto: contact,\n      },\n    });\n\n    modal.onDidDismiss().then(async (data) => {\n      if (data.role === 'confirm') {\n        const updatedContact = data.data;\n\n        const auth = getAuth();\n        const user = auth.currentUser;\n\n        if (user) {\n          // Mantener el userId al actualizar\n          const contactosCollection = collection(firestore, 'contactos');\n          const contactDoc = doc(contactosCollection, contact.id);\n          await setDoc(contactDoc, {\n            ...updatedContact,\n            userId: user.uid,\n          });\n\n          const index = this.list.findIndex((item) => item.id === contact.id);\n          if (index > -1) {\n            this.list[index] = { id: contact.id, ...updatedContact, userId: user.uid }; // Actualizar local\n          }\n          this.message = `¡Contacto \"${updatedContact.nombre}\" actualizado exitosamente!`;\n        } else {\n          console.error('Usuario no autenticado');\n        }\n      }\n    });\n\n    return await modal.present();\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ0YWIyLnBhZ2Uuc2NzcyJ9 */\";","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>Contactos</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content class=\\\"ion-padding\\\">\\n  <!-- Botón para abrir el modal -->\\n  <ion-button (click)=\\\"openModal()\\\" expand=\\\"block\\\">\\n    Agregar contactos\\n    <ion-icon slot=\\\"icon-only\\\" name=\\\"person-add-outline\\\"></ion-icon>\\n  </ion-button>\\n\\n  <!-- Lista de contactos -->\\n  <ion-list>\\n    <ion-item *ngFor=\\\"let item of list\\\">\\n      <ion-icon slot=\\\"start\\\" name=\\\"person-circle-outline\\\"></ion-icon>\\n      <ion-label>\\n        <h2>{{ item.nombre }}</h2>\\n        <p>{{ item.telefono }}</p>\\n      </ion-label>\\n      <!-- Botón para editar -->\\n      <ion-button (click)=\\\"editContact(item)\\\">\\n        <ion-icon name=\\\"pencil-outline\\\"></ion-icon>\\n      </ion-button>\\n    </ion-item>\\n  </ion-list>\\n</ion-content>\\n\";"],"sourceRoot":"webpack:///"}