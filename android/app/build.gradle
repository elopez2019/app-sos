// Aplicar el plugin de Android y el plugin de Google Services
apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.google-services'

// Configuraci칩n de Android
android {
  compileSdkVersion rootProject.ext.compileSdkVersion
  defaultConfig {
    applicationId "io.ionic.starter"
    minSdkVersion rootProject.ext.minSdkVersion
    targetSdkVersion rootProject.ext.targetSdkVersion
    versionCode 1
    versionName "1.0"
    testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    aaptOptions {
      // Archivos y carpetas para omitir del directorio de assets empaquetados
      ignoreAssetsPattern '!.svn:!.git:!.ds_store:!*.scc:.*:!CVS:!thumbs.db:!picasa.ini:!*~'
    }
  }
  buildTypes {
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }
  }
}

// Repositorios
repositories {
  flatDir{
    dirs '../capacitor-cordova-android-plugins/src/main/libs', 'libs'
  }
}

// Dependencias
dependencies {
  implementation platform('com.google.firebase:firebase-bom:33.7.0')
  implementation 'com.google.firebase:firebase-analytics'
  implementation fileTree(include: ['*.jar'], dir: 'libs')
  implementation "androidx.appcompat:appcompat:$androidxAppCompatVersion"
  implementation project(':capacitor-android')
  testImplementation "junit:junit:$junitVersion"
  androidTestImplementation "androidx.test.ext:junit:$androidxJunitVersion"
  androidTestImplementation "androidx.test.espresso:espresso-core:$androidxEspressoCoreVersion"
  implementation project(':capacitor-cordova-android-plugins')
}

// Aplicar configuraci칩n adicional
apply from: 'capacitor.build.gradle'

// Manejo de la configuraci칩n de Google Services
try {
  def servicesJSON = file('google-services.json')
  if (servicesJSON.text) {
    apply plugin: 'com.google.gms.google-services'
  }
} catch(Exception e) {
  logger.warn("google-services.json no encontrado, plugin de Google Services no aplicado. Las notificaciones push no funcionar치n.")
}
